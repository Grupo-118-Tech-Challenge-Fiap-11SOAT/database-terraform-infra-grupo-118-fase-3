# name: Terraform CI

# on:
#   pull_request:
#   push:
#     branches-ignore:
#       - main

# env:
#   ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
#   ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
#   ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#   ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}      
#   TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

# jobs:
#   terraform-ci:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v4

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v3
#         with:
#           cli_config_credentials_token: ${{ env.TF_API_TOKEN }}

#       - name: Terraform Init
#         run: terraform init -input=false

#       - name: Terraform Validate
#         run: terraform validate

#       - name: Terraform Plan
#         run: terraform plan -var "admin_login=${{ secrets.TF_SQL_ADMIN_LOGIN }}" -var "admin_password=${{ secrets.TF_SQL_ADMIN_PASSWORD}}" -var "client_ip=${{ secrets.TF_SQL_CLIENT_IP}}"

name: Create Terraform Resources

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - develop

jobs:

  prepare:
    runs-on: ubuntu-latest
    outputs:
      terraform_vars: ${{ steps.build-vars.outputs.terraform_vars }}
    steps:
      - name: Build Terraform Variables
        id: build-vars
        run: |
          TERRAFORM_VARS=$(cat << EOF
          {
              "admin_login": "${{ secrets.TF_SQL_ADMIN_LOGIN }}",
              "admin_password": "${{ secrets.TF_SQL_ADMIN_PASSWORD }}",
              "client_ip": "${{ secrets.TF_SQL_CLIENT_IP }}",
          }
          EOF
          )
          echo "terraform_vars<<EOF" >> $GITHUB_OUTPUT
          echo "$TERRAFORM_VARS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  deploy:
    needs: prepare
    uses: Grupo-118-Tech-Challenge-Fiap-11SOAT/terraform-template-pipeline-grupo118-fase-3/.github/workflows/terraform-template-creation-resource.yml@feature/receive-parameters-dinamically
    with:
      terraform_vars: ${{ needs.prepare.outputs.terraform_vars }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}